[terminal]

_ _
if then else
while
ID NUM
( )
{ }
_ _ ;
+ - * /
= ==
< <=
> >=
eof
epsilon

[nonterminal]

program
stmt
compoundstmt
stmts
ifstmt
whilestmt
assgstmt
boolexpr
boolop
arithexpr
arithexprprime
multexpr
multexprprime
simpleexpr

[production]

program -> compoundstmt $
stmt -> ifstmt | whilestmt | assgstmt | compoundstmt $
compoundstmt -> { stmts } $
stmts -> stmt stmts | epsilon $
ifstmt -> if ( boolexpr ) then stmt else stmt $
whilestmt -> while ( boolexpr ) stmt $
assgstmt -> ID = arithexpr ; $
boolexpr -> arithexpr boolop arithexpr $
boolop -> < | > | <= | >= | == $
arithexpr -> multexpr arithexprprime $
arithexprprime -> + multexpr arithexprprime | - multexpr arithexprprime | epsilon $
multexpr -> simpleexpr multexprprime $
multexprprime -> * simpleexpr multexprprime | / simpleexpr multexprprime | epsilon $
simpleexpr -> ID | NUM | ( arithexpr ) $
